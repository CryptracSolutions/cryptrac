 (cd "$(git rev-parse --show-toplevel)" && git apply --3way <<'EOF' 
diff --git a/app/payment/success/[id]/page.tsx b/app/payment/success/[id]/page.tsx
index e009c03e0e1c9c098a6ff210671e097e201e7b08..71cc56b0e881ec5523b734473b797de40088617b 100644
--- a/app/payment/success/[id]/page.tsx
+++ b/app/payment/success/[id]/page.tsx
@@ -255,51 +255,58 @@ export default function PaymentSuccessPage() {
         })
       }
     } catch (error) {
       console.error('Failed to copy to clipboard:', error)
       toast.error('Failed to copy to clipboard')
     }
   }
 
   const formatCurrency = (amount: number, currencyCode: string) => {
     const currency = FIAT_CURRENCIES.find(c => c.code === currencyCode)
     if (currency) {
       return `${currency.symbol}${amount.toFixed(2)}`
     }
     return `${amount.toFixed(2)} ${currencyCode}`
   }
 
   const formatCrypto = (amount: number, currencyCode: string, decimals: number = 8) => {
     return `${amount.toFixed(decimals)} ${currencyCode}`
   }
 
   const getBlockExplorerUrl = (txHash: string, currency: string) => {
     const currencyUpper = currency.toUpperCase()
     
     if (currencyUpper === 'BTC') {
       return `https://blockstream.info/tx/${txHash}`
-    } else if (currencyUpper === 'ETH' || currencyUpper.includes('ERC20') || currencyUpper.includes('USDT') || currencyUpper.includes('USDC')) {
+    } else if (
+      currencyUpper === 'ETH' ||
+      currencyUpper.includes('ERC20') ||
+      currencyUpper.includes('USDT') ||
+      currencyUpper.includes('USDC') ||
+      currencyUpper === 'DAI' ||
+      currencyUpper === 'PYUSD'
+    ) {
       return `https://etherscan.io/tx/${txHash}`
     } else if (currencyUpper === 'LTC') {
       return `https://blockchair.com/litecoin/transaction/${txHash}`
     } else if (currencyUpper === 'SOL') {
       return `https://solscan.io/tx/${txHash}`
     } else if (currencyUpper === 'TRX' || currencyUpper.includes('TRC20')) {
       return `https://tronscan.org/#/transaction/${txHash}`
     } else if (currencyUpper === 'BNB' || currencyUpper.includes('BSC')) {
       return `https://bscscan.com/tx/${txHash}`
     } else if (currencyUpper === 'MATIC' || currencyUpper.includes('POLYGON')) {
       return `https://polygonscan.com/tx/${txHash}`
     }
     
     return null
   }
 
   if (loading) {
     return (
       <div className="min-h-screen bg-gray-50 flex items-center justify-center">
         <div className="text-center">
           <Loader2 className="h-8 w-8 animate-spin mx-auto mb-4" />
           <p className="text-gray-600">Loading payment confirmation...</p>
         </div>
       </div>
     )
 
EOF
)